//第一种，普通筛

/******************************************************************************************************/
#include<stdio.h>
#include<stdbool.h>
#include<string.h>
#include<math.h>
#define N 100

//普通筛：元素量为N+1的bool类型的数组，true表示素数，false表示非素数，返回下标代表对应数字 
int main(void)
{
	int i,j;
	bool number[N+1];		
	memset(number,true,sizeof(number));		//memset 函数，快速赋值 
	for(i=2;i<=sqrt(N);i++){				//因为素数是成对在sqrt(N)两边出现，只需要遍历一边就ok 
		if(number[i]==true){				
			for(j=2;j*i<=N;j++){		
				number[i*j]=false;			//若一个数是素数，则他的倍数肯定不是素数，筛除		 
			}
		}
	}							
	//输出素数 
	for(i=2;i<=N;i++){						 
		if(number[i]==true){
			printf("%d ",i);
		}
	}
	
	return 0;	
}

//第二种：欧拉筛

/*******************************************************************************************************/
#include<stdio.h>
#include<stdbool.h>
#define N 100
int main(void)
{
    bool number[N+1];
    int prime[N+1];
    int i,j,count=0;
    memset(number,true,sizeof(number));
    for(i=2;i<=N;i++)
    {
        if(number[i])
            prime[count++]=i;
        for(j=0;j<count&&prime[j]*i<=N;j++)
        {
            number[prime[j]*i]=false;
            if(i%prime[j]==0)//精华就在于此：它保证每个合数只会被它的最小质因数筛去，因此每个数只会被标记一次，所以时间复杂度是O(n)
                break;
        }
    }
    for(i=2;i<N+1;i++)
        if(number[i]==true)
            printf("%d ",i);
    return 0;
}
